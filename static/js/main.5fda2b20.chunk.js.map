{"version":3,"sources":["Components/RenderMap/RenderMap.js","Components/WelcomeScreen/WelcomeScreen.js","Hooks/useHandbook.js","Components/RenderSpellbook/RenderSpellbook.js","Components/CharacterAbility/CharacterAbility.js","Components/Character/Character.js","Components/Summary/Summary.js","Components/NewCharacterForm/NewCharacterForm.js","Components/Playground/Playground.js","Components/ContentSelector/ContentSelector.js","Hooks/useDicecloud.js","Components/App/App.js","serviceWorker.js","index.js"],"names":["mapStyle","WelcomeScreen","props","Fragment","className","onClick","userTypeSelect","value","useHandbook","category","query","useState","isLoading","setIsLoading","error","setError","queryResult","setQueryResult","headers","Headers","append","useEffect","abortController","AbortController","url","newQuery","fetch","method","signal","then","response","json","data","count","results","mode","catch","console","log","finalUrl","queriedObject","find","object","name","fetchData","newUrl","split","forEach","word","upper","charAt","toUpperCase","substring","push","join","getQuery","abort","RenderSpellbook","spellExtra","spellLevel","higher_level","map","paragraph","key","desc","indexOf","replace","level","index","selectedResource","school","casting_time","range","components","duration","classes","element","border","borderImage","marginTop","maxWidth","largeImageSrc","RenderMap","src","img","Image","onload","onerror","checkImage","maps","selectedMap","src_large","imageSrc","imageAlt","alt","style","magnifierOffsetX","magnifierOffsetY","CharAbility","ability","abilityMod","stil","id","CharStat","stat","statProficiency","cleanStat","cleanStatProficiency","type","readOnly","checked","CharProf","portraitStyle","portraits","document","getElementsByClassName","window","matchMedia","addListener","x","matches","call","i","abilities","skills","Character","portraitUrls","dndClass","PictureURL","Class","Name","Race","Gender","Backstory","Alignment","Experience","skill","AC","HPValue","Initiative","Speed","Description","Personality","Ideals","Bonds","Flaws","portraitUrl","Summary","proficiencies","charIndex","characterSummary","length","abilityScores","charStat","charData","NewCharacterForm","useForm","register","handleSubmit","errors","onSubmit","onNewCharacter","api","placeholder","ref","required","characters","onRemoveCharacter","fetchedData","setFetchedData","characterUrls","charObj","APIkey","Promise","all","Error","err","useDicecloud","selectedChar","content","Playground","ElementOne","ElementTwo","ElementThree","summary","characterIds","playgroundType","character","data-array","onReturn","onChange","onCharSelect","data-value","char","onResourceSelect","resource","onQuery","resources","res","onMapSelect","App","userType","setUserType","characterList","setCharacterList","resourceList","mapList","selectedCharacter","setSelectedCharacter","setSelectedResource","setQuery","setSelectedMap","userTypeSelectHandler","event","selectedType","target","footer","characterUrl","apiKey","characterName","characterId","match","newSelection","some","obj","charName","findIndex","alert","newCharacterList","getElementById","filter","updateSelectedCharacter","newSelectedCharacter","charIds","newResource","mapId","Boolean","location","hostname","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5fda2b20.chunk.js","sourcesContent":["import React from 'react';\r\nimport { GlassMagnifier } from \"react-image-magnifiers\";\r\nimport './RenderMap.css';\r\n\r\nlet mapStyle = {};\r\n\r\nmapStyle = {\r\n\tborder: \"20px solid red\",\r\n\tborderImage: \"url(mapBorder.png) 38 round\",\r\n\tmarginTop: \"20px\",\r\n\tmaxWidth: \"90%\"\r\n}\r\n\r\nconst xOffset = -20;\r\nconst yOffset = -20;\r\n\r\nlet largeImageSrc = \"\";\r\n\r\nconst checkImage = src => {\r\n\tlet img = new Image();\r\n\timg.onload = () => largeImageSrc = src;\r\n\timg.onerror = () => largeImageSrc = \"\"; // if image does not exist, set largeImageSrc to default value\r\n\r\n\timg.src = src; // starts loading of image\r\n}\r\n\r\n// const toggleBorder = (event) => {\r\n// \t\r\n// }\r\n\r\nexport const RenderMap = (props) => {\r\n\tlargeImageSrc= \"\"; //Reset src to avoid 'magnifying' with the wrong large image\r\n\tcheckImage(props.maps[props.selectedMap].src_large);\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"img-magnifier-container\" >\r\n\t\t\t\t<GlassMagnifier\r\n\t\t\t\t\timageSrc={props.maps[props.selectedMap].src}\r\n\t\t\t\t\tlargeImageSrc= {largeImageSrc}\r\n\t\t\t\t\timageAlt={props.maps[props.selectedMap].alt} \r\n\t\t\t\t\tstyle={mapStyle}\r\n\t\t\t\t\tmagnifierOffsetX={xOffset}\r\n\t\t\t\t\tmagnifierOffsetY={yOffset}\r\n\t\t\t\t/>\r\n\t\t\t\t<p className=\"map-description\">{props.maps[props.selectedMap].desc}</p>\r\n\t\t\t\t{/*<span><input type=\"button\" onClick=\"toggleBorder()\" value=\"Border\" /></span>*/}\r\n\t\t\t</div>\r\n\t\t</>\r\n\t)\r\n}\r\n","import React from 'react';\r\nimport './WelcomeScreen.css';\r\n\r\nconst WelcomeScreen = (props) => {\r\n\treturn(\r\n\t\t<React.Fragment >\r\n\t\t  <div className=\"WelcomeScreen-header\">\r\n\t\t    <h1>This will be Legendary!</h1>\r\n\t\t    <h2>Now choose honestly</h2>\r\n\t\t    <ul className=\"UserType-list\">\r\n\t\t      <li><button onClick={props.userTypeSelect} value=\"DM\" >I AM THE ALMIGHTY DUNGEON MASTER!</button></li>\r\n\t\t      <li><button onClick={props.userTypeSelect} value=\"player\" >I am but a humble adventurer</button></li>\r\n\t\t    </ul>\r\n\t\t  </div>\r\n\t\t</React.Fragment>\r\n\t)\r\n}\r\n\r\nexport default WelcomeScreen;","import { useState, useEffect } from 'react';\r\n\r\nexport const useHandbook = (category, query) => {\r\n\tconst [ isLoading, setIsLoading ] = useState(false);\r\n\tconst [ error, setError ] = useState(null);\r\n\tconst [ queryResult, setQueryResult ] = useState(null);\r\n\r\n\tconst getQuery = () => {\r\n\t\tlet newUrl = '';\r\n\t\tlet newQuery = [];\r\n\t\tif(query) {\r\n\t\t\tconst splitQuery = query.split(' ');\r\n\t\t\tsplitQuery.forEach(word => {\r\n\t\t\t\tconst upper = word.charAt(0).toUpperCase() + word.substring(1);\r\n\t\t\t\tnewQuery.push(upper);\r\n\t\t\t});\r\n\t\t\tnewUrl = 'https://cors-anywhere.herokuapp.com/https://dnd5eapi.co/api/' + category + '/?name=' + newQuery.join('+');\r\n\t\t} else {\r\n\t\t\tnewUrl = 'https://cors-anywhere.herokuapp.com/https://dnd5eapi.co/api/' + category;\r\n\t\t}\r\n\t\treturn [ newUrl, newQuery.join(' ') ];\r\n\t}\r\n\r\n\tlet headers = new Headers();\r\n\theaders.append('Accept', 'application/json');\r\n\r\n\tconst fetchData = ([url, newQuery], abortController) => {\r\n\t\tsetIsLoading(true);\r\n\t\tfetch(url, {\r\n\t\t\tmethod: \"GET\",\r\n\t\t\theaders: headers,\r\n\t\t\tsignal: abortController.signal\r\n\t\t})\r\n\t\t.then(response => response.json())\r\n\t\t.then(data => {\r\n\t\t\tif(data.count === 1) {\r\n\t\t\t\t// The API changed how they answered queries... This used to work...\r\n\t\t\t\tfetch('https://cors-anywhere.herokuapp.com/' + data.results[0]['url'], {\r\n      \t\t\t\tmethod: \"GET\",\r\n      \t\t\t\theaders: headers,\r\n      \t\t\t\tmode: 'cors',\r\n      \t\t\t\tsignal: abortController.signal\r\n      \t\t\t})\r\n      \t\t\t.then(response => response.json())\r\n      \t\t\t.then(data => {\r\n      \t\t\t\tsetIsLoading(false);\r\n\t\t\t\t\tsetQueryResult(data);\r\n      \t\t\t})\r\n      \t\t\t.catch(error => {\r\n      \t\t\t\tconsole.log('2: ' + error);\r\n      \t\t\t\tsetIsLoading(false);\r\n      \t\t\t\tsetError(error);\r\n      \t\t\t})\r\n\t\t\t} else if (data.count > 1) {\r\n\t\t\t\t// Had to add this when the API changed how it responded to queries...\r\n\t\t\t\tconst queriedObject = data.results.find(object => object.name === newQuery);\r\n\t\t\t\tlet finalUrl;\r\n\t\t\t\tif (queriedObject) {\r\n\t\t\t\t\tfinalUrl = queriedObject.url;\r\n\t\t\t\t\tfetch('https://cors-anywhere.herokuapp.com/https://dnd5eapi.co' + finalUrl, {\r\n\t      \t\t\t\tmethod: \"GET\",\r\n\t      \t\t\t\theaders: headers,\r\n\t      \t\t\t\tmode: 'cors',\r\n\t      \t\t\t\tsignal: abortController.signal\r\n\t      \t\t\t})\r\n\t      \t\t\t.then(response => response.json())\r\n\t      \t\t\t.then(data => {\r\n\t      \t\t\t\tsetIsLoading(false);\r\n\t\t\t\t\t\tsetQueryResult(data);\r\n\t      \t\t\t})\r\n\t      \t\t\t.catch(error => {\r\n\t      \t\t\t\tconsole.log('2: ' + error);\r\n\t      \t\t\t\tsetIsLoading(false);\r\n\t      \t\t\t\tsetError(error);\r\n\t      \t\t\t})\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.log('Nothing found. Make sure you use the right resource')\r\n\t\t\t\t\tsetIsLoading(false);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tconsole.log('Nothing found. Make sure you use the right resource')\r\n\t\t\t\tsetIsLoading(false);\r\n\t\t\t}\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tconsole.log('1: ' + error);\r\n\t\t\tsetIsLoading(false);\r\n\t\t\tsetError(error);\r\n\t\t})\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tconst abortController = new AbortController();\r\n\t\tfetchData(getQuery(), abortController)\r\n\t\treturn () => {\r\n\t\t\tabortController.abort();\r\n\t\t}\r\n\t}, [category, query]);\r\n\treturn [ queryResult, error, isLoading ];\r\n};","import React from 'react';\r\n// import { useQueryHandler } from '../../Hooks/useQueryHandler';\r\nimport './RenderSpellbook.css';\r\n\r\nexport const RenderSpellbook = props => {\r\n\t// const [ not sure yet ] = useQueryHandler[props.selectedResource, props.data]\r\n\tlet render = null;\r\n\tlet spellExtra = null;\r\n\tlet spellLevel = null;\r\n\tif (props.data.higher_level) {\r\n\t\tspellExtra = (\r\n\t\t\t<div className=\"higher-level\" >\r\n\t\t\t\t<h1>Higher Levels</h1>\r\n\t\t\t\t<hr/>\r\n\t\t\t\t{props.data.higher_level.map(paragraph => <p className=\"spell-text\" key={props.data.desc.indexOf(paragraph)}>{paragraph.replace(/â€™/gi, \"'\")}</p>)}\r\n\t\t\t</div>\r\n\t\t)\r\n\t} else {\r\n\t\tspellExtra = null;\r\n\t}\r\n\tif (props.data.level <= 0) {\r\n\t\tspellLevel = \"Cantrip\"\r\n\t} else if (props.data.level === 1) spellLevel = \"1st level\";\r\n\telse if (props.data.level === 2) spellLevel = \"2nd level\";\r\n\telse if (props.data.level === 3) spellLevel = \"3rd level\";\r\n\t\telse spellLevel = props.data.level + \"th level\";\r\n\tif(props.data.index && props.selectedResource === \"Spells\") {\r\n\t\trender = (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<div className=\"spell-card-holder\">\r\n\t\t\t\t\t<div className=\"spell-card\">\r\n\t\t\t\t\t\t<h1 className=\"spell-name\">{props.data.name}</h1>\r\n\t\t\t\t\t\t<p className=\"spell-school\">{props.data.school.name}   {spellLevel}</p>\r\n\t\t\t\t\t\t<div className=\"spell-stats\" >\r\n\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t<b>Casting Time:</b> {props.data.casting_time}\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t<b>Range:</b> {props.data.range}\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t<b>Components:</b> {props.data.components.join(', ')}\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t<b>Duration:</b> {props.data.duration}\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t<b>Classes:</b> {props.data.classes.map(element => element.name).join(', ')}\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"spell-text\" >\r\n\t\t\t\t\t\t\t{props.data.desc.map(paragraph => <p key={props.data.desc.indexOf(paragraph)}>{paragraph.replace(/â€™/gi, \"'\")}</p>)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t{spellExtra}\r\n\t\t\t\t\t</div> \r\n\t\t\t\t</div>\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t} else if(props.selectedResource !== \"Spells\") {\r\n\t\trender =  (\r\n\t\t\t<h1>Feature not fully developed yet. Please use \"Spells\".</h1>\r\n\t\t)\r\n\t} else render = <p>Please search for spells using spell name. Examples coming in later version.</p>\r\n\treturn render;\r\n}","import React from 'react';\r\n\r\n\r\nexport const CharAbility = ({\r\n\tability,\r\n\tabilityMod,\r\n\tstil,\r\n\tdata\r\n}) => {\r\n\treturn (\r\n\t\t<div className={stil + \"-abilities\"}>\r\n\t\t  <h2 className={stil + \"-ability\"}> {ability} </h2>\r\n\t\t  <p className={stil + \"-ability-score\"} id={ability}> {data[ability]} </p>\r\n\t\t  <p className={stil + \"-ability-modifier\"} id={ability+\"Mod\"}> {data[abilityMod]} </p>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport const CharStat = ({\r\n\tstat,\r\n\tstatProficiency,\r\n\tdata\r\n}) => {\r\n\tconst cleanStat = stat.replace(/\\s+/g, '');\r\n\tconst cleanStatProficiency = statProficiency.replace(/\\s+/g, '');\r\n\treturn (\r\n\t\t<div className=\"round\">\r\n\t\t\t<input className=\"character-stat-proficiency\" type=\"checkbox\" readOnly checked={data[cleanStatProficiency]}/>\r\n\t\t\t<label id={cleanStat + \"-label\"}></label>\r\n\t\t\t<span className=\"character-stat\" id={cleanStat}>{data[cleanStat]}</span><span className=\"character-stat-text\"> {stat}</span>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport const CharProf = ({\r\n\tstat,\r\n\tstatProficiency,\r\n\tdata\r\n}) => {\r\n\tconst cleanStat = stat.replace(/\\s+/g, '');\r\n\tlet cleanStatProficiency;\r\n\tif(typeof statProficiency === 'string') {\r\n\t\tcleanStatProficiency = statProficiency.replace(/\\s+/g, '');\r\n\t};\r\n\tif(data[cleanStatProficiency] || statProficiency === true) {\r\n\t\treturn (\r\n\t\t\t<p>{stat} {data[cleanStat]} </p>\r\n\t\t)\r\n\t} else return null;\r\n}","import React from 'react';\r\nimport { CharAbility, CharStat } from '../CharacterAbility';\r\n\r\n// Moved to ContentSelector folder so that Summary can use the same class names/styles\r\n// import './Character.css';\r\n\r\nconst portraitStyle = {\r\n  border: \"20px solid red\",\r\n  borderImage: \"url(portraitBorder.png) 100 round\"\r\n}\r\n\r\nlet portraits = document.getElementsByClassName(\"portrait\");\r\n\r\nconst changeBorder = x => {\r\n  if (x.matches) { // If media query matches\r\n    [].forEach.call(portraits, i => {\r\n      i.style.borderImage = \"\";\r\n      i.style.border = \"1px transparent\";\r\n    })\r\n  } else {\r\n    [].forEach.call(portraits, i => {\r\n      i.style.border = \"20px solid red\";\r\n      i.style.borderImage = \"url(portraitBorder.png) 100 round\";\r\n    })\r\n  }\r\n}\r\n\r\nlet smallWindow = window.matchMedia(\"(max-width: 700px)\");\r\nsmallWindow.addListener(changeBorder); // Attach listener function on state changes\r\n\r\nconst abilities = [\"Strength\", \"Dexterity\", \"Constitution\", \"intelligence\", \"Wisdom\", \"Charisma\"];\r\nconst skills = [\"Acrobatics\", \"Animal Handling\", \"Arcana\", \"Athletics\", \"Deception\", \"History\", \"Insight\", \"Intimidation\", \"Medicine\", \"Nature\", \"Perception\", \"Performance\", \"Persuasion\", \"Religion\", \"Sleight Of Hand\", \"Stealth\", \"Survival\"];\r\n\r\nconst Character = props => {\r\n  let portraitUrls = [];\r\n  let dndClass = [];\r\n  if(props.data.PictureURL && props.data.Class) {\r\n    portraitUrls = props.data.PictureURL.split(', ');\r\n    dndClass = props.data.Class.split(\" \");\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"card-holder\">\r\n        <div className=\"character-card\">\r\n          <div className=\"character-header\">\r\n            <h1>{props.data.Name}</h1>\r\n            <p>{props.data.Race} {props.data.Gender} {dndClass[0]} </p>\r\n            <p>{props.data.Backstory} - {props.data.Alignment}</p>\r\n            <p>{dndClass[0]} level {dndClass[1]} ({props.data.Experience} EXP)</p>\r\n          </div>\r\n          <div className=\"character-body\">\r\n            <div className=\"character-left\">\r\n              <div className=\"character-ability-scores\">\r\n                {abilities.map(ability => (\r\n                  <CharAbility ability={ability} abilityMod={ability+\"Mod\"} data={props.data} stil=\"character\" key={ability + ' ' + props.data.Name} />\r\n                ))}\r\n              </div>\r\n            </div>\r\n            <div className=\"character-middle\">\r\n              <div className=\"character-saves\">\r\n              {abilities.map(ability => (\r\n                  <CharStat stat={ability+\"Save\"} statProficiency={ability+\"SaveProficiency\"} data={props.data}  key={ability+\"Save \" + props.data.Name} />\r\n                ))}\r\n              </div>\r\n              <div className=\"character-skills\">\r\n              {skills.map(skill => (\r\n                  <CharStat stat={skill} statProficiency={skill+\"Proficiency\"} data={props.data}  key={skill + ' ' + props.data.Name} />\r\n                ))}\r\n              </div>\r\n              <div className=\"character-skills\">\r\n                  <CharStat stat=\"passivePerception\" statProficiency=\"PerceptionProficiency\" data={props.data}  key={\"passPerception \" + props.data.Name} />\r\n              </div>\r\n            </div>\r\n            <div className=\"character-right\">\r\n              <div className=\"character-armor\">\r\n                <h3 className=\"character-armor-title\">AC</h3>\r\n                <p className=\"character-armor-class\">{props.data.AC}</p>\r\n              </div>\r\n              <div className=\"character-health\">\r\n                <h3 className=\"character-health-title\">Max HP</h3>\r\n                <p className=\"character-health-points\">{props.data.HPValue}</p>\r\n              </div>\r\n              <div className=\"character-initiative\">\r\n                <h3 className=\"character-initiative-title\">Init</h3>\r\n                <p className=\"character-initiative-mod\">{props.data.Initiative}</p>\r\n              </div>\r\n              <div className=\"character-speed\">\r\n                <h3 className=\"character-speed-title\">Speed</h3>\r\n                <p className=\"character-speed-value\">{props.data.Speed}</p>\r\n              </div>\r\n              <div id=\"desc\">{props.data.Description}</div>\r\n            </div>\r\n          </div>\r\n          <div className=\"character-footer\">\r\n            <div className=\"character-personality\">\r\n            <h3>Personality</h3>\r\n            <p className=\"character-personality-trait\">{props.data.Personality}</p>\r\n            <p className=\"character-personality-ideals\">{props.data.Ideals}</p>\r\n            <p className=\"character-personality-bonds\">{props.data.Bonds}</p>\r\n            <p className=\"character-personality-flaws\">{props.data.Flaws}</p>\r\n            </div>\r\n            <div className=\"character-images\">\r\n              {portraitUrls.map(portraitUrl => (\r\n                <img className=\"portrait\" key={portraitUrls.indexOf(portraitUrl)} src={portraitUrl} alt=\"Not found.\" style={portraitStyle} /> \r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Character;\r\n\r\n\r\n    // <div className=\"summary\">\r\n\r\n    //   <p>{props.description}</p>\r\n    // </div>","import React from 'react';\r\nimport './Summary.css';\r\n\r\nimport { CharAbility, /*CharStat,*/ CharProf } from '../CharacterAbility';\r\n\r\nconst Summary = props => {\r\n\tconst abilities = [\"Strength\", \"Dexterity\", \"Constitution\", \"intelligence\", \"Wisdom\", \"Charisma\"];\r\n\tconst skills = [\"Acrobatics\", \"Animal Handling\", \"Arcana\", \"Athletics\", \"Deception\", \"History\", \"Insight\", \"Intimidation\", \"Medicine\", \"Nature\", \"Perception\", \"Performance\", \"Persuasion\", \"Religion\", \"Sleight Of Hand\", \"Stealth\", \"Survival\"];\r\n\r\n\t// const passivePerceptions = (charIndex) => {\r\n\t// \treturn (\r\n\t// \t\t<CharStat stat=\"passivePerception\" statProficiency=\"PerceptionProficiency\" data={props.data[charIndex][0]}  key={\"passPerception \" + props.data[charIndex][0].Name} />\r\n\t// \t)\r\n\t// }\r\n\t// const stat = (stat, charIndex) => {\r\n\t// \treturn (\r\n\t// \t\t<CharStat stat={stat} statProficiency={stat+\"Proficiency\"} data={props.data[charIndex][0]}  key={stat + ' ' + props.data[charIndex][0].Name} />\r\n\t// \t)\r\n\t// }\r\n\r\n\tconst proficiencies = (stat, charIndex) => {\r\n    \treturn (\r\n\t\t\t<CharProf stat={stat} statProficiency={stat+\"Proficiency\"} data={props.data[charIndex][0]}  key={stat+ \"Proficiency \" + props.data[charIndex][0].Name} />\r\n    \t)\r\n    }\r\n\r\n    const abilityScores = (ability, charIndex) => {\r\n    \treturn (\r\n    \t\t<CharAbility ability={ability} abilityMod={ability+'Mod'} data={props.data[charIndex][0]} stil=\"summary\" key={ability + props.data[charIndex][0].Name} />\r\n    \t)\r\n    }\r\n\r\n    const characterSummary = (charIndex) => {\r\n    \treturn (\r\n    \t\t<React.Fragment key={\"Character \" + charIndex + \" out of \" + props.data.length} >\r\n\t\t    \t{/*<p>{props.data[charIndex][0].Name}</p>\r\n\t\t    \t<p>Proficiency Bonus: {}</p>*/}\r\n\t\t    \t<div className=\"summary-item\">\r\n\t\t\t    \t<h1 className=\"summary-name\" >{props.data[charIndex][0].Name}</h1>\r\n\t\t    \t\t{abilities.map(ability => abilityScores(ability, charIndex))}\r\n\t\t    \t\t<div className=\"summary-proficiencies\">\r\n\t\t\t\t    \t{abilities.map(ability => proficiencies(ability + \" Save\", charIndex))}\r\n\t\t\t\t    \t{skills.map(charStat => proficiencies(charStat, charIndex))}\r\n\t\t\t\t    \t<CharProf stat=\"passivePerception\" statProficiency={true} data={props.data[charIndex][0]}  key={\"passPerception \" + props.data[charIndex][0].Name} />\r\n\t\t    \t\t</div>\r\n\t\t    \t</div>\r\n\t    \t</React.Fragment>\r\n    \t)\r\n    }\r\n\r\n\r\n\r\n\treturn (\r\n\t    <React.Fragment>\r\n\t    \t{props.data.map((charData, index) => (\r\n\t    \t\tcharacterSummary(index))\r\n\t    \t)}\r\n\t    </React.Fragment>\r\n\t)\r\n}\r\n\r\nexport default Summary;","import React from 'react';\r\nimport useForm from 'react-hook-form';\r\n\r\nimport './NewCharacterForm.css';\r\n\r\nexport function NewCharacterForm(props) {\r\n  const { register, handleSubmit, errors } = useForm();\r\n  const onSubmit = data => \r\n  {\r\n    props.onNewCharacter(data.url, data.api, data.name);\r\n  }\r\n  \r\n  return (\r\n    <React.Fragment>\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        <label>Add New Character:</label>\r\n        <input className=\"search-element\" type=\"url\" placeholder=\"Dicecloud URL\" name=\"url\" ref={register({required: true})} />\r\n        {errors.url && <p className=\"input-error\">Your input is required</p>}\r\n        <input className=\"search-element\" type=\"text\" placeholder=\"Dicecloud API\" name=\"api\" ref={register({required: true})} />\r\n        {errors.api && <p className=\"input-error\">Your input is required</p>}\r\n        <input className=\"search-element\" type=\"text\" placeholder=\"Character Name\" name=\"name\" ref={register({required: true})} />\r\n        {errors.name && <p className=\"input-error\">Your input is required</p>}\r\n\r\n        <input className=\"my-button\" type=\"submit\" />\r\n      </form>\r\n\r\n      <ul className=\"delete-list\" >\r\n        {props.characters.map((charData, index) => (\r\n          <li key={index} >{charData.name + ' '} \r\n            <button className=\"delete\" onClick={props.onRemoveCharacter} value={charData.name} > Remove </button>\r\n          </li>\r\n        ))}\r\n        <li key=\"removeAll\" > \r\n          <button className=\"delete\" onClick={props.onRemoveCharacter} value=\"REMOVE-ALL\" >Remove All Characters</button>\r\n        </li>\r\n      </ul>\r\n    </React.Fragment>\r\n  );\r\n}","import React from 'react';\r\nimport './Playground.css';\r\nimport { Player, Spellbook, WorldMap } from '../ContentSelector';\r\nimport { NewCharacterForm } from '../NewCharacterForm';\r\nimport useForm from 'react-hook-form';\r\n\r\n\r\nconst components = {\r\n\tplayer: Player,\r\n\tspellbook: Spellbook,\r\n\tworldmap: WorldMap\r\n}\r\n\r\n// const query = 'Aid';\r\n\r\nconst Playground = (props) => {\r\n//The below was created in an attempt to make the component call variable, and it does seem to work, although I didn't\r\n//end up making a selector for this. I keep it in here mostly to show how I could do it if I wanted to implement a\r\n//complete change of what is displayed in each section of the webpage, example swap player and worldmap locations.\r\n\tconst ElementOne = components['player'];\r\n\tconst ElementTwo = components['spellbook'];\r\n\tconst ElementThree = components['worldmap'];\r\n\r\n// \tInitiating useForm and testing submit using console log\r\n\tconst { register, handleSubmit } = useForm();\r\n\tconst onSubmit = data => {\r\n\t\t// console.log(data);\r\n\t\tprops.onResourceSelect(data.resource);\r\n\t\tprops.onQuery(data.query);\r\n\t}\r\n\r\n\tlet summary = null;\r\n\tlet characterIds = null;\r\n\t\tif(props.playgroundType === 'DM') {\r\n\t\t\tcharacterIds = props.characters.map((character) => character.id);\r\n\t\t\tsummary = (\r\n\t\t\t<option key=\"summary\" value={characterIds} data-array={true} >\r\n\t\t\t\tCharacter Summary\r\n\t\t\t</option>\r\n\t\t\t)\r\n\t\t} else summary = null;\r\n\r\n\treturn(\r\n\t\t<React.Fragment>\r\n\t\t\t<div className=\"main-header\">\r\n\t\t        <h1>You are a {props.playgroundType}!</h1>\r\n\t\t        <button onClick={props.onReturn} value='' >Return</button>\r\n\t\t\t</div>\r\n\t        <div className=\"container\" >\r\n\t        \t<div className=\"flex-item\">\r\n\t        \t\t<div className=\"flex-item-header\">\r\n\t\t        \t\t<select \r\n\t\t        \t\t\tid=\"characterSelector\"\r\n\t\t        \t\t\tonChange={props.onCharSelect}\r\n\t\t        \t\t\tdata-value={props.selectedChar.id}\r\n\t\t        \t\t\tclassName=\"select-css\"\r\n\t\t        \t\t>\r\n\t\t        \t\t{props.characters.map(char => (\r\n\t\t        \t\t\t<option key={char.id} value={char.id} data-array={false}>\r\n\t\t        \t\t    \t{char.name}\r\n\t\t        \t\t\t</option>\r\n\t\t        \t\t\t))}\r\n\t\t        \t\t\t{summary}\r\n\t\t        \t\t</select>\r\n\t        \t\t</div>\r\n\t        \t\t<div className=\"character-container\">\r\n\t\t        \t\t<ElementOne selectedChar={props.selectedChar} characters={props.characters} />\r\n\t        \t\t</div>\r\n\t        \t\t<div className=\"add-character\">\r\n\t        \t\t\t<NewCharacterForm onNewCharacter={props.onNewCharacter} onRemoveCharacter={props.onRemoveCharacter} characters={props.characters} />\r\n\t        \t\t</div>\r\n\t        \t</div>\r\n\t        \t<div className=\"flex-item\">\r\n\t        \t\t<div className=\"flex-item-header\">\r\n\r\n{/*Using the react-hook-form instead of normal form have the react state be the \"single source of truth\" */}\r\n\t\t\t\t\t<form onSubmit={handleSubmit(onSubmit)}>\r\n\t\t\t\t\t\t<select className=\"select-css\" \r\n\t\t\t\t\t\t\tname=\"resource\" \r\n\t\t\t\t\t\t\tref={register}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{props.resources.map(res => (\r\n\t\t\t\t\t\t\t\t<option key={res} value={res} >\r\n\t\t\t\t\t\t\t\t\t{res}\r\n\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<input className=\"search\" type=\"input\" name=\"query\" placeholder=\"Spell Name\" ref={register} />\r\n\t\t\t\t\t\t\t<input className=\"my-button\" type=\"submit\" value=\"Search\" />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</form>\r\n\t        \t\t</div>\r\n\t        \t\t<div className=\"spell-container\">\r\n\t        \t\t\t<ElementTwo selectedResource={props.selectedResource} query={props.query} />\r\n\t        \t\t</div>\r\n\t        \t\r\n\t        \t</div>\r\n\t        \t<div className=\"flex-item\">\r\n\t        \t\t<div className=\"flex-item-header\">\r\n\t        \t\t<select \r\n\t        \t\t\tonChange={props.onMapSelect}\r\n\t        \t\t\tvalue={props.selectedMap}\r\n\t        \t\t\tclassName=\"select-css\"\r\n\t        \t\t>\r\n\t        \t\t{props.maps.map(map => (\r\n\t        \t\t\t<option key={map.id} value={map.id} >\r\n\t        \t\t\t\t{map.name}\r\n\t        \t\t\t</option>\r\n\t        \t\t\t))}\r\n\t        \t\t</select>\r\n\t        \t\t</div>\r\n\t        \t\t<div className=\"map-container\">\r\n\t\t        \t\t<ElementThree maps={props.maps} selectedMap={props.selectedMap} />\r\n\t        \t\t</div>\r\n\t        \t</div>\r\n\t        </div>\r\n\t        <button className=\"my-button bottom\" onClick={props.onReturn} value='' >Return</button>\r\n\t\t</React.Fragment>\r\n\t)\r\n}\r\n\r\nexport default Playground;","import React from 'react';\r\nimport { useDicecloud } from '../../Hooks/useDicecloud';\r\n// import { usePlayersHandbook } from '../../Hooks/usePlayersHandbook';\r\nimport { useHandbook } from '../../Hooks/useHandbook';\r\nimport { RenderSpellbook } from '../RenderSpellbook';\r\nimport { RenderMap } from '../RenderMap';\r\n\r\nimport Character from '../Character';\r\nimport Summary from '../Summary';\r\nimport './ContentSelector.css';\r\nimport './Character.css';\r\n\r\n\r\nexport const Player = (props) => {\r\n\tconst [ isLoading, fetchedData ] = useDicecloud(props.selectedChar);\r\n\r\n  \tlet content = <p>Loading characters...</p>;\r\n\t\r\n  \tif(props.characters.length === 0) {\r\n  \t\tcontent = (\r\n  \t\t\t<h1>Please add a character using the form below...</h1>)\r\n  \t} else if (props.selectedChar === null) {\r\n  \t\tcontent = (\r\n  \t\t\t<h1>Please select a character above.</h1>\r\n  \t\t)\r\n  \t} else if(!isLoading && fetchedData && fetchedData.length > 0) {\r\n\t\t// console.log(fetchedData.length);\r\n  \t\tif(fetchedData.length > 1) {\r\n  \t\tcontent = (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<div className=\"summary-parent\">\r\n\t\t\t\t\t<Summary\r\n\t\t\t\t\t\tdata={fetchedData}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</React.Fragment>\r\n\t\t)} else {\r\n  \t\tcontent = (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<Character \r\n\t\t\t\t\tdata={fetchedData[0][0]}\r\n\t\t\t\t/>\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n  \t}\r\n  \t}\r\n  \treturn content;\r\n}\r\n\r\nexport const Spellbook = (props) => {\r\n\tconst [ fetchedData, error, isLoading ] = useHandbook(props.selectedResource, props.query);\r\n\r\n  \tlet content = <p>Loading {props.selectedResource}</p>;\r\n  \tif(!isLoading && fetchedData && !error) {\r\n  \t\tcontent = (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<RenderSpellbook \r\n\t\t\t\t\tselectedResource={props.selectedResource}\r\n\t\t\t\t\tdata={fetchedData}\r\n\t\t\t\t/>\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t} else if(error) {\r\n\t\tconsole.log(error)\r\n\t}\r\n\treturn content;\r\n}\r\n\r\nexport const WorldMap = (props) => {\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<RenderMap maps={props.maps} selectedMap={props.selectedMap} />\r\n\t\t</React.Fragment>\r\n\t)\r\n}","import { useState, useEffect } from 'react';\r\n\r\nexport const useDicecloud = (characters) => {\r\n\t\r\n\tconst [ isLoading, setIsLoading ] = useState(false);\r\n\tconst [ fetchedData, setFetchedData ] = useState([]);\r\n\r\n\tlet characterUrls = [];\r\n\r\n\tif(characters.length > 1) {\r\n\t\tcharacterUrls = characters.map(charObj => `https://dicecloud.com/vmix-character/${charObj.id}?key=${charObj.APIkey}`);\r\n\t} else if(characters.length === 1){\r\n\t\tcharacterUrls[0] = `https://dicecloud.com/vmix-character/${characters[0].id}?key=${characters[0].APIkey}`;\r\n\t} else {\r\n\t\tcharacterUrls = null;\r\n\t}\r\n\t// console.log(characterUrls);\r\n\t\r\n\tconst proxyUrl = 'https://cors-anywhere.herokuapp.com/';\r\n\tlet headers = new Headers();\r\n\theaders.append('Accept', 'application/json');\r\n\r\n\tuseEffect(() => {\r\n\t\tconst abortController = new AbortController();\r\n\t\tif(characters.length === 0) {\r\n\t\t\tconsole.log('No character selected.')\r\n\t\t} else {\r\n\t\t\tsetIsLoading(true);\r\n\t\t\t// console.log(characterUrls);\r\n\r\n\t\t\tPromise.all(characterUrls.map(url => {\r\n\t\t\t\t// console.log('Sending Http request for ' + url);\r\n\t\t\t    return fetch(proxyUrl + url, {\r\n\t\t\t    \tmethod: \"GET\",\r\n\t\t\t    \theaders: headers,\r\n\t\t\t    \tmode: 'cors',\r\n\t\t\t    \tsignal: abortController.signal\r\n\t\t\t    }).then(response => response.json())\r\n\t\t\t})).then(results => {\r\n\t\t      \t\tsetIsLoading(false);\r\n\t\t      \t\t// console.log(results)\r\n\t\t        \tsetFetchedData(results ? results : new Error('Failed for reasons'));\r\n\t      \t\t})\r\n\t\t      .catch(err => {\r\n\t\t        console.log(err);\r\n\t\t        setIsLoading(false);\r\n\t\t      });\r\n\t\t}\r\n\t\treturn () => {\r\n\t\t\tabortController.abort();\r\n\t\t}\r\n\t}, [ characters ]);\r\n\r\n    return [ isLoading, fetchedData ];\r\n}","import React, { useState } from 'react';\r\nimport './App.css';\r\n//import usePlayground from '../../Hooks/usePlayground.js';\r\nimport WelcomeScreen from '../WelcomeScreen';\r\nimport Playground from '../Playground';\r\n\r\nconst App = () => {\r\n  const [ userType, setUserType ] = useState('');\r\n  const [ characterList, setCharacterList ] = useState([\r\n    {\r\n      id: 'mLdzKAN7AAGt3qPP2',\r\n      APIkey: 'QRryrEJEF27FDcPsZgWZZvhHhf5a3t',\r\n      name: 'Harley Merlin'\r\n    },\r\n    {\r\n      id: 'f7rZWpSiorNDNv5Qp',\r\n      APIkey: 'QRryrEJEF27FDcPsZgWZZvhHhf5a3t',\r\n      name: 'Shrek'\r\n    },\r\n    {\r\n      id: 'xS8JoRmvpsnjm529p',\r\n      APIkey: 'QRryrEJEF27FDcPsZgWZZvhHhf5a3t',\r\n      name: 'Draud'\r\n    }\r\n  ]);\r\n  const [ resourceList, setResourceList ] = useState([\r\n    'Spells',\r\n    'Equipment',\r\n    'Proficiencies'\r\n  ]);\r\n  const [ mapList, setMapList ] = useState([\r\n    {\r\n      id: 0,\r\n      name: 'World Map',\r\n      src: './WorldMap.jpg',\r\n      src_large: './WorldMap_large.jpg',\r\n      alt: 'The world map of Miradonia',\r\n      desc: 'Miradonia consists of two main continents. It is populated by a variety of races and monsters. '\r\n    },\r\n    {\r\n      id: 1,\r\n      name: 'Regional Map',\r\n      src: './RegionalMap.jpg',\r\n      src_large: './RegionalMap_large.jpg',\r\n      alt: 'The region map of Mistwood',\r\n      desc: 'The region of Mistwood holds the main travel route between the north and south. The Mist Woods themselves are the homeland for many wood elves, while the Knife Edge Mountains is the home to some smaller groups of Dwarves. Elesgate is the capital of the region, being a natural stop for any who travel north-south. The Silver River connects Elesgate to Martslock which functions as the main port. Work in progress...'\r\n    }\r\n  ]);\r\n  const [ selectedCharacter, setSelectedCharacter ] = useState([{\r\n      id: 'mLdzKAN7AAGt3qPP2',\r\n      APIkey: 'QRryrEJEF27FDcPsZgWZZvhHhf5a3t',\r\n      name: 'Harley Merlin'\r\n    }]);\r\n  const [ selectedResource, setSelectedResource ] = useState('Spells');\r\n  const [ query, setQuery ] = useState('Eldritch Blast');\r\n  const [ selectedMap, setSelectedMap ] = useState(0);\r\n  const userTypeSelectHandler = (event) => {\r\n    const selectedType = event.target.value;\r\n    setUserType(selectedType);\r\n  };\r\n\r\n  const selectCharacterHandler = (event) => {\r\n    let charIds = [];\r\n    charIds = event.target.value.split(',');\r\n    let newSelection = [];\r\n    if(charIds.length > 1) {\r\n      newSelection = characterList;\r\n    } else {\r\n      newSelection[0] = characterList.find(obj => obj.id === charIds[0]);\r\n    }\r\n    setSelectedCharacter(newSelection);\r\n  }\r\n\r\n  const addCharacterHandler = (characterUrl, apiKey, characterName) => {\r\n    const characterId = characterUrl.match(/character\\/\\w*\\//g)[0].split('/')[1];\r\n    let newSelection = [];\r\n    // console.log(characterId, apiKey, characterName);\r\n    if(!characterList.some(obj => obj.id === characterId)) { //If characterId is unique, add create a new character\r\n      const newCharacterList = [...characterList, { id: characterId, APIkey: apiKey, name: characterName }];\r\n      setCharacterList(newCharacterList);\r\n      newSelection[0] = newCharacterList.find(obj => obj.id === characterId);\r\n      setSelectedCharacter(newSelection);\r\n      // To update the dropdown to show the correct character after update.\r\n      let element = document.getElementById('characterSelector');\r\n      element.value = characterId;\r\n    } else { //If characterId is not unique, inform the user that the character exists and under what name.\r\n      let charName = characterList[characterList.findIndex(obj => obj.id === characterId)].name;\r\n      console.log(\"Character already exists under the name: \" + charName);\r\n      window.alert(\"Character already exists under the name: \" + charName);\r\n    }\r\n  }\r\n\r\n  const removeCharacterHandler = (event) => {\r\n    if(event.target.value === \"REMOVE-ALL\") {\r\n      setCharacterList([]);\r\n      setSelectedCharacter([]);\r\n    } else {\r\n      const newCharacterList = characterList.filter(obj => obj.name !== event.target.value);\r\n      setCharacterList(newCharacterList);\r\n      \r\n      let updateSelectedCharacter = true;\r\n      if(selectedCharacter.length > 1) {\r\n        setSelectedCharacter(newCharacterList);\r\n      } else {\r\n        if(selectedCharacter) {\r\n          updateSelectedCharacter = !newCharacterList.some(obj => obj.id === selectedCharacter.id);\r\n        }\r\n        if(updateSelectedCharacter && newCharacterList.length > 0) {\r\n          const newSelectedCharacter = [newCharacterList[0]]\r\n          setSelectedCharacter(newSelectedCharacter);\r\n          console.log(newCharacterList);\r\n        } else {\r\n          setSelectedCharacter([]);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  const selectResourceHandler = (newResource) => {\r\n    setSelectedResource(newResource);\r\n  }\r\n\r\n  const selectMapHandler = (event) => {\r\n    const mapId = event.target.value;\r\n    setSelectedMap(mapId);\r\n  }\r\n\r\n// Not implemented at this time... Would be similar to addCharacterHandler.\r\n  // const addMapItem = (newMap) => {\r\n  //   const newMapList = [...mapList, newMap]; //newMap should be an object.\r\n  //   setMapList(newMapList);\r\n  // }\r\n\r\n  const handleQuery = (newQuery) => {\r\n    setQuery(newQuery);\r\n  }\r\n\r\n  const footer = (\r\n    <div className=\"footer\">\r\n      <h5>Created by Ole Kristian Sævareid</h5> \r\n      <p>Project goal is to experiment with React & React Hooks and create something \r\n      useful for Dungeons & Dragons players and Dungeon Masters using Dicecloud.com</p>\r\n    </div>\r\n  )\r\n\r\n  let content = (\r\n    <React.Fragment>\r\n      <WelcomeScreen userTypeSelect={userTypeSelectHandler} userType={userType} />\r\n      {footer}\r\n    </React.Fragment>\r\n  );\r\n\r\n  if(userType) {\r\n    content = (\r\n      <React.Fragment>\r\n        <div className=\"main\">\r\n          <Playground \r\n          playgroundType={userType} \r\n          onReturn={userTypeSelectHandler} \r\n          onNewCharacter={addCharacterHandler}\r\n          onRemoveCharacter={removeCharacterHandler}\r\n          characters={characterList}\r\n          selectedChar={selectedCharacter} \r\n          onCharSelect={selectCharacterHandler}\r\n          resources={resourceList}\r\n          selectedResource={selectedResource}\r\n          onResourceSelect={selectResourceHandler}\r\n          maps={mapList}\r\n          selectedMap={selectedMap}\r\n          onMapSelect={selectMapHandler}\r\n          query={query}\r\n          onQuery={handleQuery}\r\n\r\n          // onNewMap={addMapItem}\r\n           />      \r\n        </div>\r\n        {footer}\r\n      </React.Fragment>\r\n  )};\r\n  return content;\r\n} \r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './Components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}